sudo: false
language: python
group: travis_latest

git:
  depth: 3
  quiet: true
  submodules: false
  lfs_skip_smudge: true

branches:
  only:
    - master
    # - /^v[\d.]+/

stages:
  # - check
  - test
  - deploy

env:
  global: if [ -z "$TRAVIS_TAG" ]; then PYLOAD_DEVBUILD="$TRAVIS_BUILD_NUMBER"; fi

# NOTE: this must be set to latest stable python version
python: 3.7
# NOTE: this must be set to latest supported ubuntu version
dist: xenial

# addons:
  # apt:
    # update: true
    # packages: libgnutls-dev

cache: pip
install: pip install --upgrade pip setuptools tox tox-travis
script: tox --sitepackages

jobs:
  allow_failures:
    - os:
      - osx
      - windows
    - python: nightly

  include:
    # - stage: check
      # name: Pylint errors
      # script: tox -e pylint --sitepackages

    - stage: test
      os: linux
      python: 3.6

    - stage: test
      os: linux
      python: 3.7

    # - stage: test
      # os: linux
      # python: nightly

    # NOTE: work-around to test Python on OSX (not supported officially)
    - stage: test
      os: osx
      language: generic
      env: TOXENV=py37
      addons:
        homebrew:
          update: true
          packages: python3
      before_script:
        - pip install virtualenv
        - virtualenv -p python3 ~/venv
        - source ~/venv/bin/activate

    # NOTE: work-around to test Python on Windows (not supported officially)
    - stage: test
      os: windows
      language: sh
      env: TOXENV=py37
      addons:
        chocolatey:
          update: true
          packages: python3
      before_install:
        - choco install -y python3
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"

    - stage: deploy
      name: Github release
      install:
        - pip install --upgrade pip setuptools wheel
        - pip install -e .[deploy]
      script: false
      deploy:
        provider: releases
        api-key:
          secure: "LDbvOV6EIV2itKUOSQE24RctMJTj7trF8eRQIMQJFa50W/fT03HpHiRVzhddUo4UadzAy5XNm5fRZY5AMNOomQk023mHwTUuPIhQDLVl1Esati7OZpekhKE1v4+sbLfVvvv+rRuDfcn+qjiZ358UU6D4SuZ4zClu6hUxnt0Qc70="
        file_glob: true
        file: dist/*
        skip_cleanup: true
        # prerelease: true
        on:
          repo: pyload/pyload
          branch: master
          tags: true

    - stage: deploy
      name: PyPI release
      install:
        - pip install --upgrade pip setuptools wheel
        - pip install -e .[deploy]
      script: false
      deploy:
        provider: pypi
        user:
          secure: "IDWPXbVVMr9/sZOb5/p9bXTvq//EGuzQWM4CnQOm2G4mfaX0ssr7+4w+wweJgI9UJFIcoHmvYC0cjljCleSW1j+1G3GO7whInLUuD63Vt1iA8H4UIvg4JYcTwGZQ9R/PWoW0k5MHems0picgA3cMw/9VBfl3IUraGb6+2QdxpHY="
        password:
          secure: "eoe3SLOEa0Z7UxJI905InCzHatdDigIBt/fl7b6kOHy76IYU3e5lZ/c6urGJBOsy+1LN6vPHvWmVVw/vhevfTd8MM6i0cGXo23zIefYAU2zkjKejWyF2/tke6spngikC1vzEyANs9fNFLXU4USCfgr1lCvuuy9Znwl/sI6jqVTg="
        distributions: release
        skip_cleanup: true
        skip_existing: true
        on:
          repo: pyload/pyload
          branch: master

    - stage: deploy
      name: Docker release
      env:
        - secure: "dtCGQHfYizfV/u3nZ9lQZcNsb2eJrvCarJaZAuerOllqlsPzfpFFVJVmDpkwaCjs8qEEvflQOPO0o/uonUKQOSmWdcQaqmtMlRZ3JZEENWXAnLJDy/lfBflrR+An47vS5oNQ9bNcLMM7GBFbOxcXFGK6zScXnS2g8erXqymN46M="
        - secure: "TrWBa99CnrnJ/FYKhq20EYAhbjlLXVExQu5ScZczDYzVZYV1rLzENInyc8L7JVU1A6vSJ4lIKZ+BYMk03hSMSU8wIQPrKaKHLBfjgX6hww9gBHIdfhnM9yVhBS8NM+jwmGQBotFjiRsQVCg1Jhtd9YwpjCO6Gj4UBmNfxXt52tw="
      addons:
        apt:
          update: true
          packages: docker-ce
      services: docker
      install: pip install docker-ci-deploy
      before_script: docker pull pyload/pyload || true
      script:
        - docker build --pull --cache-from pyload/pyload --tag pyload/pyload .
        # - docker run pyload/pyload
      after_script: docker images
      before_deploy: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      deploy:
        provider: script
        script:
          - if [ ! -z "$TRAVIS_TAG" ]; then dcd --tag "$TRAVIS_TAG" pyload/pyload; fi
          - dcd --version-latest pyload/pyload
        on:
          branch: master

matrix:
  fast_finish: true

# after_success:
  # - if [[ "$COVERAGE" == "true" ]]; then coveralls || echo "failed"; fi
